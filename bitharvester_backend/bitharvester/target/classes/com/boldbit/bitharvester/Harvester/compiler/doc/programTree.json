{"parseTreeType":"PROGRAM","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":0,"line":0,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1101,"line":50,"column":1}},"sourceElements":[{"parseTreeType":"PACKAGE_DECLARARTION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":0,"line":0,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":58,"line":0,"column":58}},"qualifiedName":[{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":8,"line":0,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":11,"line":0,"column":11}},"value":"com","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":8,"line":0,"column":8}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":12,"line":0,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":19,"line":0,"column":19}},"value":"boldbit","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":12,"line":0,"column":12}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":20,"line":0,"column":20},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":32,"line":0,"column":32}},"value":"bitharvester","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":20,"line":0,"column":20}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":33,"line":0,"column":33},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":42,"line":0,"column":42}},"value":"Harvester","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":33,"line":0,"column":33}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":43,"line":0,"column":43},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":51,"line":0,"column":51}},"value":"compiler","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":43,"line":0,"column":43}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":52,"line":0,"column":52},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":57,"line":0,"column":57}},"value":"rough","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":52,"line":0,"column":52}}]},{"parseTreeType":"IMPORT_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":60,"line":2,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":139,"line":4,"column":31}},"importDeclarationsTrees":[{"parseTreeType":"IMPORT_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":60,"line":2,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":79,"line":2,"column":19}},"qualifiedName":[{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":67,"line":2,"column":7},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":71,"line":2,"column":11}},"value":"java","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":67,"line":2,"column":7}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":72,"line":2,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":76,"line":2,"column":16}},"value":"util","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":72,"line":2,"column":12}},{"tokenType":"STAR","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":77,"line":2,"column":17},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":78,"line":2,"column":18}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":77,"line":2,"column":17}}],"importType":"ON_DEMAND_IMPORT"},{"parseTreeType":"IMPORT_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":80,"line":3,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":107,"line":3,"column":27}},"qualifiedName":[{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":87,"line":3,"column":7},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":91,"line":3,"column":11}},"value":"java","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":87,"line":3,"column":7}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":92,"line":3,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":96,"line":3,"column":16}},"value":"util","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":92,"line":3,"column":12}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":97,"line":3,"column":17},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":106,"line":3,"column":26}},"value":"ArrayList","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":97,"line":3,"column":17}}],"importType":"SINGLE_IMPORT"},{"parseTreeType":"IMPORT_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":108,"line":4,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":139,"line":4,"column":31}},"qualifiedName":[{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":122,"line":4,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":126,"line":4,"column":18}},"value":"java","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":122,"line":4,"column":14}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":127,"line":4,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":131,"line":4,"column":23}},"value":"lang","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":127,"line":4,"column":19}},{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":132,"line":4,"column":24},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":136,"line":4,"column":28}},"value":"Math","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":132,"line":4,"column":24}},{"tokenType":"STAR","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":137,"line":4,"column":29},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":138,"line":4,"column":30}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":137,"line":4,"column":29}}],"importType":"STATIC_IMPORT"}]},{"parseTreeType":"CLASS_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":141,"line":6,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1082,"line":46,"column":1}},"modifiers":[{"tokenType":"PUBLIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":141,"line":6,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":147,"line":6,"column":6}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":141,"line":6,"column":0}},{"tokenType":"FINAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":148,"line":6,"column":7},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":153,"line":6,"column":12}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":148,"line":6,"column":7}}],"className":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":160,"line":6,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":163,"line":6,"column":22}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":160,"line":6,"column":19}},"superClass":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":172,"line":6,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":178,"line":6,"column":37}},"value":"Animal","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":172,"line":6,"column":31}},"classElements":{"parseTreeType":"CLASS_ELEMENTS","treeLocation":null,"variablesListTree":{"parseTreeType":"VARIABLE_DECLARATION_LIST","treeLocation":null,"variablesList":[{"parseTreeType":"FIELD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":186,"line":8,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":199,"line":8,"column":17}},"modifiersList":[{"tokenType":"STATIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":186,"line":8,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":192,"line":8,"column":10}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":186,"line":8,"column":4}}],"type":{"tokenType":"INT","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":193,"line":8,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":196,"line":8,"column":14}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":193,"line":8,"column":11}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":197,"line":8,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":198,"line":8,"column":16}},"value":"a","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":197,"line":8,"column":15}},"initializer":null},{"parseTreeType":"FIELD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":204,"line":9,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":214,"line":9,"column":14}},"modifiersList":[],"type":{"tokenType":"INT","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":204,"line":9,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":207,"line":9,"column":7}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":204,"line":9,"column":4}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":208,"line":9,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":209,"line":9,"column":9}},"value":"b","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":208,"line":9,"column":8}},"initializer":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":212,"line":9,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":213,"line":9,"column":13}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":213,"line":9,"column":13},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":213,"line":9,"column":13}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":212,"line":9,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":213,"line":9,"column":13}},"value":"a","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":212,"line":9,"column":12}}}}},{"parseTreeType":"FIELD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":219,"line":10,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":253,"line":10,"column":38}},"modifiersList":[],"type":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":219,"line":10,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":225,"line":10,"column":10}},"value":"String","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":219,"line":10,"column":4}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":226,"line":10,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":241,"line":10,"column":26}},"value":"parentClassName","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":226,"line":10,"column":11}},"initializer":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":244,"line":10,"column":29},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":252,"line":10,"column":37}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":252,"line":10,"column":37},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":252,"line":10,"column":37}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":244,"line":10,"column":29},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":252,"line":10,"column":37}},"value":"Animal","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":244,"line":10,"column":29}}}}},{"parseTreeType":"FIELD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":258,"line":11,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":303,"line":11,"column":49}},"modifiersList":[{"tokenType":"PUBLIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":258,"line":11,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":264,"line":11,"column":10}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":258,"line":11,"column":4}},{"tokenType":"STATIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":265,"line":11,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":271,"line":11,"column":17}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":265,"line":11,"column":11}},{"tokenType":"FINAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":272,"line":11,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":277,"line":11,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":272,"line":11,"column":18}}],"type":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":278,"line":11,"column":24},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":284,"line":11,"column":30}},"value":"String","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":278,"line":11,"column":24}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":285,"line":11,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":294,"line":11,"column":40}},"value":"className","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":285,"line":11,"column":31}},"initializer":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":297,"line":11,"column":43},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":302,"line":11,"column":48}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":302,"line":11,"column":48},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":302,"line":11,"column":48}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":297,"line":11,"column":43},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":302,"line":11,"column":48}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":297,"line":11,"column":43}}}}},{"parseTreeType":"OBJECT_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":309,"line":13,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":332,"line":13,"column":27}},"modifiersList":[],"type":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":309,"line":13,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":312,"line":13,"column":7}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":309,"line":13,"column":4}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":313,"line":13,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":319,"line":13,"column":14}},"value":"dogObj","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":313,"line":13,"column":8}},"initializer":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"methodIdentifier":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":329,"line":13,"column":24}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"arguments":[]}}}}]},"callsListTree":{"parseTreeType":"METHOD_DECLARATION_LIST","treeLocation":null,"methodCallsList":[{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"methodIdentifier":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":329,"line":13,"column":24}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"arguments":[]}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"methodIdentifier":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":329,"line":13,"column":24}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":326,"line":13,"column":21}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":331,"line":13,"column":26}},"arguments":[]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":371,"line":17,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11}},"value":"obj","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":371,"line":17,"column":8}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":381,"line":17,"column":18}},"value":"getOrg","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"arguments":[]}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":395,"line":17,"column":32}},"value":"getEmployee","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"arguments":[]}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":406,"line":17,"column":43}},"value":"sayHello","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"arguments":[]}}}}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":381,"line":17,"column":18}},"value":"getOrg","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"arguments":[]}},{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":395,"line":17,"column":32}},"value":"getEmployee","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"arguments":[]}},{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":406,"line":17,"column":43}},"value":"sayHello","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"arguments":[]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":423,"line":18,"column":13}},"value":"speak","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"value":"5","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14}}}}]}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":423,"line":18,"column":13}},"value":"speak","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"value":"5","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14}}}}]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":502,"line":23,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":502,"line":23,"column":12}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":509,"line":23,"column":19}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":509,"line":23,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":509,"line":23,"column":19}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":520,"line":23,"column":30}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"value":"Barking...","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31}}}}]}}}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":520,"line":23,"column":30}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"value":"Barking...","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31}}}}]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":720,"line":33,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31}},"value":"task","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":720,"line":33,"column":27}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":731,"line":33,"column":38}},"value":"length","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"arguments":[]}}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":731,"line":33,"column":38}},"value":"length","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"arguments":[]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":836,"line":36,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":836,"line":36,"column":16}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":843,"line":36,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":843,"line":36,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":843,"line":36,"column":23}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":854,"line":36,"column":34}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"value":"Working","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35}}}}]}}}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":854,"line":36,"column":34}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"value":"Working","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35}}}}]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":925,"line":39,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":925,"line":39,"column":12}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":932,"line":39,"column":19}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":932,"line":39,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":932,"line":39,"column":19}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":943,"line":39,"column":30}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"value":"Something went wrong","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31}}}}]}}}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":943,"line":39,"column":30}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"value":"Something went wrong","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31}}}}]}}]},{"parseTreeType":"METHOD_CALLS_LIST","treeLocation":null,"expression":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1039,"line":44,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1039,"line":44,"column":8}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1046,"line":44,"column":15}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1046,"line":44,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1046,"line":44,"column":15}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1057,"line":44,"column":26}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"value":"Hello World!","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27}}}}]}}}}},"methodCallsInExpression":[{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1057,"line":44,"column":26}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"value":"Hello World!","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27}}}}]}}]}]},"methodsListTree":{"parseTreeType":"METHOD_DECLARATION_LIST","treeLocation":null,"methodsList":[{"parseTreeType":"CONSTRUCTOR_STATEMENT","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":341,"line":15,"column":7},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":433,"line":19,"column":5}},"name":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":338,"line":15,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":341,"line":15,"column":7}},"value":"Dog","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":338,"line":15,"column":4}},"formalParameters":[],"body":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":341,"line":15,"column":7},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":433,"line":19,"column":5}},"block":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":354,"line":16,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":361,"line":16,"column":15}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":355,"line":16,"column":9},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":355,"line":16,"column":9}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":354,"line":16,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":355,"line":16,"column":9}},"value":"a","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":354,"line":16,"column":8}}},"binaryOperator":{"tokenType":"STAR_EQUAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":356,"line":16,"column":10},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":358,"line":16,"column":12}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":356,"line":16,"column":10}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":359,"line":16,"column":13},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":361,"line":16,"column":15}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":361,"line":16,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":361,"line":16,"column":15}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":359,"line":16,"column":13},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":361,"line":16,"column":15}},"value":"10","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":359,"line":16,"column":13}}}}},{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":371,"line":17,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11}},"value":"obj","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":371,"line":17,"column":8}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":374,"line":17,"column":11}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":381,"line":17,"column":18}},"value":"getOrg","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":375,"line":17,"column":12}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"arguments":[]}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":383,"line":17,"column":20}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":395,"line":17,"column":32}},"value":"getEmployee","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":384,"line":17,"column":21}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"arguments":[]}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":397,"line":17,"column":34}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":406,"line":17,"column":43}},"value":"sayHello","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":398,"line":17,"column":35}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":408,"line":17,"column":45}},"arguments":[]}}}}}},{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":423,"line":18,"column":13}},"value":"speak","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":418,"line":18,"column":8}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":426,"line":18,"column":16}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":425,"line":18,"column":15}},"value":"5","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":424,"line":18,"column":14}}}}]}}}]}},{"parseTreeType":"METHOD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":439,"line":21,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":622,"line":28,"column":5}},"modifiersList":[{"tokenType":"PUBLIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":439,"line":21,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":445,"line":21,"column":10}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":439,"line":21,"column":4}},{"tokenType":"STATIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":446,"line":21,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":452,"line":21,"column":17}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":446,"line":21,"column":11}}],"isStatic":false,"methodSignatureTree":{"parseTreeType":"METHOD_SIGNATURE","treeLocation":null,"returnType":{"tokenType":"VOID","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":453,"line":21,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":457,"line":21,"column":22}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":453,"line":21,"column":18}},"methodName":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":458,"line":21,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":463,"line":21,"column":28}},"value":"speak","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":458,"line":21,"column":23}},"parameterList":[{"parseTreeType":"METHOD_PARAMETER_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":464,"line":21,"column":29},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":473,"line":21,"column":38}},"type":{"tokenType":"INT","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":464,"line":21,"column":29},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":467,"line":21,"column":32}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":464,"line":21,"column":29}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":468,"line":21,"column":33},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":473,"line":21,"column":38}},"value":"times","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":468,"line":21,"column":33}},"value":null}]},"body":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":439,"line":21,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":622,"line":28,"column":5}},"block":[{"parseTreeType":"DO_WHILE_STATEMENT","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":485,"line":22,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":564,"line":24,"column":28}},"condition":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":485,"line":22,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":562,"line":24,"column":26}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":558,"line":24,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":558,"line":24,"column":22}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":553,"line":24,"column":17},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":558,"line":24,"column":22}},"value":"times","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":553,"line":24,"column":17}}},"binaryOperator":{"tokenType":"GREATER_THAN","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":559,"line":24,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":560,"line":24,"column":24}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":559,"line":24,"column":23}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":561,"line":24,"column":25},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":562,"line":24,"column":26}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":562,"line":24,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":562,"line":24,"column":26}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":561,"line":24,"column":25},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":562,"line":24,"column":26}},"value":"2","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":561,"line":24,"column":25}}}}},"body":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":485,"line":22,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":545,"line":24,"column":9}},"block":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":502,"line":23,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":502,"line":23,"column":12}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":509,"line":23,"column":19}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":508,"line":23,"column":18}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":509,"line":23,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":509,"line":23,"column":19}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":512,"line":23,"column":22}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":520,"line":23,"column":30}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":513,"line":23,"column":23}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":534,"line":23,"column":44}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":533,"line":23,"column":43}},"value":"Barking...","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":521,"line":23,"column":31}}}}]}}}}}]}},{"parseTreeType":"IF_STATEMENT","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":573,"line":25,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":616,"line":27,"column":9}},"condition":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":573,"line":25,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":583,"line":25,"column":18}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":578,"line":25,"column":13},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":578,"line":25,"column":13}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":577,"line":25,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":578,"line":25,"column":13}},"value":"a","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":577,"line":25,"column":12}}},"binaryOperator":{"tokenType":"LESS_THAN","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":579,"line":25,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":580,"line":25,"column":15}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":579,"line":25,"column":14}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":581,"line":25,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":583,"line":25,"column":18}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":583,"line":25,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":583,"line":25,"column":18}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":581,"line":25,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":583,"line":25,"column":18}},"value":"20","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":581,"line":25,"column":16}}}}},"ifBody":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":573,"line":25,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":616,"line":27,"column":9}},"block":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":599,"line":26,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":605,"line":26,"column":18}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":600,"line":26,"column":13},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":600,"line":26,"column":13}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":599,"line":26,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":600,"line":26,"column":13}},"value":"a","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":599,"line":26,"column":12}}},"binaryOperator":{"tokenType":"EQUAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":601,"line":26,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":602,"line":26,"column":15}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":601,"line":26,"column":14}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":603,"line":26,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":605,"line":26,"column":18}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":605,"line":26,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":605,"line":26,"column":18}},"literalToken":{"tokenType":"LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":603,"line":26,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":605,"line":26,"column":18}},"value":"20","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":603,"line":26,"column":16}}}}}]},"elseBody":null}]}},{"parseTreeType":"METHOD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":654,"line":31,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":984,"line":41,"column":5}},"modifiersList":[],"isStatic":false,"methodSignatureTree":{"parseTreeType":"METHOD_SIGNATURE","treeLocation":null,"returnType":{"tokenType":"VOID","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":654,"line":31,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":658,"line":31,"column":8}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":654,"line":31,"column":4}},"methodName":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":659,"line":31,"column":9},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":663,"line":31,"column":13}},"value":"work","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":659,"line":31,"column":9}},"parameterList":[{"parseTreeType":"METHOD_PARAMETER_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":664,"line":31,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":675,"line":31,"column":25}},"type":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":664,"line":31,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":670,"line":31,"column":20}},"value":"String","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":664,"line":31,"column":14}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":671,"line":31,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":675,"line":31,"column":25}},"value":"task","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":671,"line":31,"column":21}},"value":null}]},"body":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":654,"line":31,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":984,"line":41,"column":5}},"block":[{"parseTreeType":"TRY_STATEMENT","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":687,"line":32,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":978,"line":40,"column":9}},"tryBody":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":687,"line":32,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":890,"line":38,"column":9}},"block":[{"parseTreeType":"FIELD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":705,"line":33,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":734,"line":33,"column":41}},"modifiersList":null,"type":{"tokenType":"INT","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":705,"line":33,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":708,"line":33,"column":15}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":705,"line":33,"column":12}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":709,"line":33,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":717,"line":33,"column":24}},"value":"taskSize","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":709,"line":33,"column":16}},"initializer":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":720,"line":33,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31}},"value":"task","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":720,"line":33,"column":27}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":724,"line":33,"column":31}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":731,"line":33,"column":38}},"value":"length","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":725,"line":33,"column":32}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":733,"line":33,"column":40}},"arguments":[]}}}}},{"parseTreeType":"ARRAY_LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":747,"line":34,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":781,"line":34,"column":46}},"modifiersList":null,"type":{"tokenType":"INT","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":747,"line":34,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":750,"line":34,"column":15}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":747,"line":34,"column":12}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":753,"line":34,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":761,"line":34,"column":26}},"value":"subTasks","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":753,"line":34,"column":18}},"elements":[]},{"parseTreeType":"FOR_STATEMENT","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":795,"line":35,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":880,"line":37,"column":13}},"forControl":{"parseTreeType":"ENHANCED_FOR_CONTROL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33}},"initialization":{"parseTreeType":"FIELD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":800,"line":35,"column":17},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33}},"modifiersList":[{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":804,"line":35,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":805,"line":35,"column":22}},"value":"i","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":804,"line":35,"column":21}}],"type":{"tokenType":"INT","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":800,"line":35,"column":17},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":803,"line":35,"column":20}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":800,"line":35,"column":17}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":804,"line":35,"column":21},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":805,"line":35,"column":22}},"value":"i","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":804,"line":35,"column":21}},"initializer":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":808,"line":35,"column":25},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":808,"line":35,"column":25},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":816,"line":35,"column":33}},"value":"subTasks","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":808,"line":35,"column":25}}}}}},"body":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":818,"line":35,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":880,"line":37,"column":13}},"block":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":836,"line":36,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":836,"line":36,"column":16}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":843,"line":36,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":842,"line":36,"column":22}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":843,"line":36,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":843,"line":36,"column":23}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":846,"line":36,"column":26}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":854,"line":36,"column":34}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":847,"line":36,"column":27}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":865,"line":36,"column":45}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":864,"line":36,"column":44}},"value":"Working","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":855,"line":36,"column":35}}}}]}}}}}]}}]},"catchBody":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":897,"line":38,"column":16},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":978,"line":40,"column":9}},"block":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":925,"line":39,"column":12},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":925,"line":39,"column":12}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":932,"line":39,"column":19}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":931,"line":39,"column":18}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":932,"line":39,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":932,"line":39,"column":19}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":935,"line":39,"column":22}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":943,"line":39,"column":30}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":936,"line":39,"column":23}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":967,"line":39,"column":54}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":966,"line":39,"column":53}},"value":"Something went wrong","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":944,"line":39,"column":31}}}}]}}}}}]},"finallyBody":null}]}},{"parseTreeType":"METHOD_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":990,"line":43,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1080,"line":45,"column":5}},"modifiersList":[{"tokenType":"PUBLIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":990,"line":43,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":996,"line":43,"column":10}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":990,"line":43,"column":4}},{"tokenType":"STATIC","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":997,"line":43,"column":11},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1003,"line":43,"column":17}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":997,"line":43,"column":11}}],"isStatic":false,"methodSignatureTree":{"parseTreeType":"METHOD_SIGNATURE","treeLocation":null,"returnType":{"tokenType":"VOID","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1004,"line":43,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1008,"line":43,"column":22}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1004,"line":43,"column":18}},"methodName":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1009,"line":43,"column":23},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1013,"line":43,"column":27}},"value":"main","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1009,"line":43,"column":23}},"parameterList":[{"parseTreeType":"ARRAY_LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1014,"line":43,"column":28},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1027,"line":43,"column":41}},"modifiersList":null,"type":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1014,"line":43,"column":28},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1020,"line":43,"column":34}},"value":"String","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1014,"line":43,"column":28}},"name":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1023,"line":43,"column":37},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1027,"line":43,"column":41}},"value":"args","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1023,"line":43,"column":37}},"elements":null}]},"body":{"parseTreeType":"BLOCK","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":990,"line":43,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1080,"line":45,"column":5}},"block":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14}},"classIdentifierToken":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1039,"line":44,"column":8},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14}},"value":"System","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1039,"line":44,"column":8}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1046,"line":44,"column":15}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1045,"line":44,"column":14}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"expression":{"parseTreeType":"IDENTIFIER_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18}},"identifierToken":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1046,"line":44,"column":15},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18}},"value":"out","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1046,"line":44,"column":15}}},"binaryOperator":{"tokenType":"PERIOD","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19}},"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1049,"line":44,"column":18}},"expression2":{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"expression":{"parseTreeType":"METHOD_CALL","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"methodIdentifier":{"tokenType":"IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1057,"line":44,"column":26}},"value":"println","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1050,"line":44,"column":19}},"arguments":{"parseTreeType":"ARGUMENT_LIST","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1073,"line":44,"column":42}},"arguments":[{"parseTreeType":"EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"expression":{"parseTreeType":"LITERAL_EXPRESSION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"literalToken":{"tokenType":"STRING_LITERAL","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1072,"line":44,"column":41}},"value":"Hello World!","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1058,"line":44,"column":27}}}}]}}}}}]}}]}}},{"parseTreeType":"CLASS_DECLARATION","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1084,"line":48,"column":0},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1101,"line":50,"column":1}},"modifiers":[],"className":{"tokenType":"CLASS_IDENTIFIER","location":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1090,"line":48,"column":6},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1096,"line":48,"column":12}},"value":"Animal","start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":1090,"line":48,"column":6}},"superClass":null,"classElements":{"parseTreeType":"CLASS_ELEMENTS","treeLocation":null,"variablesListTree":{"parseTreeType":"VARIABLE_DECLARATION_LIST","treeLocation":null,"variablesList":[]},"callsListTree":{"parseTreeType":"METHOD_DECLARATION_LIST","treeLocation":null,"methodCallsList":[]},"methodsListTree":{"parseTreeType":"METHOD_DECLARATION_LIST","treeLocation":null,"methodsList":[]}}}],"sourceComments":[{"type":"LINE","value":"// TODO: Some Comment","treeLocation":{"start":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":628,"line":30,"column":4},"end":{"source":{"fileName":"Solution.java","contents":"package com.boldbit.bitharvester.Harvester.compiler.rough;\n\nimport java.util.*;\nimport java.util.ArrayList;\nimport static java.lang.Math.*;\n\npublic final class Dog extends Animal {\n\n    static int a;\n    int b = a;\n    String parentClassName = \"Animal\";\n    public static final String className = \"Dog\";\n\n    Dog dogObj = new Dog();\n\n    Dog() {\n        a *= 10;\n        obj.getOrg().getEmployee().sayHello();\n        speak(5);\n    }\n\n    public static void speak(int times) {\n        do {\n            System.out.println(\"Barking...\");\n        } while (times > 2);\n        if (a < 20) {\n            a = 20;\n        }\n    }\n\n    // TODO: Some Comment\n    void work(String task) {\n        try {\n            int taskSize = task.length();\n            int[] subTasks = new int[taskSize];\n            for (int i : subTasks) {\n                System.out.println(\"Working\");\n            }\n        } catch (Exception e) {\n            System.out.println(\"Something went wrong\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n\nclass Animal {\n\n}","fileSize":"1.08 KB"},"offset":649,"line":30,"column":25}}}]}