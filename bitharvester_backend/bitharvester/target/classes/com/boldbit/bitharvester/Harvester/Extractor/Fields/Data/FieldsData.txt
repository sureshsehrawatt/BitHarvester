Classfile /Users/cavisson/Documents/Projects/bitharvester/bitharvester_backend/bitharvester/src/main/java/com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.class
  Last modified 30 Jan 2024; size 1968 bytes
  SHA-256 checksum 87b12120f24a462b6fd7bceca69f08bc26e0958f2d6f365810e1cd0aa96c5260
  Compiled from "FieldsData.java"
public class com.boldbit.bitharvester.Harvester.Extractor.Fields.Data.FieldsData
  minor version: 0
  major version: 64
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                          // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 22, methods: 1, attributes: 1
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9         // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.byteSVar:B
    #8 = Class              #10           // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData
    #9 = NameAndType        #11:#12       // byteSVar:B
   #10 = Utf8               com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData
   #11 = Utf8               byteSVar
   #12 = Utf8               B
   #13 = Fieldref           #8.#14        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.byteTVar:B
   #14 = NameAndType        #15:#12       // byteTVar:B
   #15 = Utf8               byteTVar
   #16 = Methodref          #17.#18       // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
   #17 = Class              #19           // java/lang/Byte
   #18 = NameAndType        #20:#21       // valueOf:(B)Ljava/lang/Byte;
   #19 = Utf8               java/lang/Byte
   #20 = Utf8               valueOf
   #21 = Utf8               (B)Ljava/lang/Byte;
   #22 = Fieldref           #8.#23        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.byteObjectVar:Ljava/lang/Byte;
   #23 = NameAndType        #24:#25       // byteObjectVar:Ljava/lang/Byte;
   #24 = Utf8               byteObjectVar
   #25 = Utf8               Ljava/lang/Byte;
   #26 = Fieldref           #8.#27        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.shortVar:S
   #27 = NameAndType        #28:#29       // shortVar:S
   #28 = Utf8               shortVar
   #29 = Utf8               S
   #30 = Methodref          #31.#32       // java/lang/Short.valueOf:(S)Ljava/lang/Short;
   #31 = Class              #33           // java/lang/Short
   #32 = NameAndType        #20:#34       // valueOf:(S)Ljava/lang/Short;
   #33 = Utf8               java/lang/Short
   #34 = Utf8               (S)Ljava/lang/Short;
   #35 = Fieldref           #8.#36        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.shortObjectVar:Ljava/lang/Short;
   #36 = NameAndType        #37:#38       // shortObjectVar:Ljava/lang/Short;
   #37 = Utf8               shortObjectVar
   #38 = Utf8               Ljava/lang/Short;
   #39 = Integer            100000
   #40 = Fieldref           #8.#41        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.intVar:I
   #41 = NameAndType        #42:#43       // intVar:I
   #42 = Utf8               intVar
   #43 = Utf8               I
   #44 = Integer            9876543
   #45 = Methodref          #46.#47       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #46 = Class              #48           // java/lang/Integer
   #47 = NameAndType        #20:#49       // valueOf:(I)Ljava/lang/Integer;
   #48 = Utf8               java/lang/Integer
   #49 = Utf8               (I)Ljava/lang/Integer;
   #50 = Fieldref           #8.#51        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.integerVar:Ljava/lang/Integer;
   #51 = NameAndType        #52:#53       // integerVar:Ljava/lang/Integer;
   #52 = Utf8               integerVar
   #53 = Utf8               Ljava/lang/Integer;
   #54 = Fieldref           #8.#55        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.intSecondVar:I
   #55 = NameAndType        #56:#43       // intSecondVar:I
   #56 = Utf8               intSecondVar
   #57 = Long               1000000000l
   #59 = Fieldref           #8.#60        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.longVar:J
   #60 = NameAndType        #61:#62       // longVar:J
   #61 = Utf8               longVar
   #62 = Utf8               J
   #63 = Methodref          #64.#65       // java/lang/Long.valueOf:(J)Ljava/lang/Long;
   #64 = Class              #66           // java/lang/Long
   #65 = NameAndType        #20:#67       // valueOf:(J)Ljava/lang/Long;
   #66 = Utf8               java/lang/Long
   #67 = Utf8               (J)Ljava/lang/Long;
   #68 = Fieldref           #8.#69        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.longObjectVar:Ljava/lang/Long;
   #69 = NameAndType        #70:#71       // longObjectVar:Ljava/lang/Long;
   #70 = Utf8               longObjectVar
   #71 = Utf8               Ljava/lang/Long;
   #72 = Float              3.14f
   #73 = Fieldref           #8.#74        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.floatVar:F
   #74 = NameAndType        #75:#76       // floatVar:F
   #75 = Utf8               floatVar
   #76 = Utf8               F
   #77 = Methodref          #78.#79       // java/lang/Float.valueOf:(F)Ljava/lang/Float;
   #78 = Class              #80           // java/lang/Float
   #79 = NameAndType        #20:#81       // valueOf:(F)Ljava/lang/Float;
   #80 = Utf8               java/lang/Float
   #81 = Utf8               (F)Ljava/lang/Float;
   #82 = Fieldref           #8.#83        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.floatObjectVar:Ljava/lang/Float;
   #83 = NameAndType        #84:#85       // floatObjectVar:Ljava/lang/Float;
   #84 = Utf8               floatObjectVar
   #85 = Utf8               Ljava/lang/Float;
   #86 = Double             3.14159265359d
   #88 = Fieldref           #8.#89        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.doubleVar:D
   #89 = NameAndType        #90:#91       // doubleVar:D
   #90 = Utf8               doubleVar
   #91 = Utf8               D
   #92 = Methodref          #93.#94       // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #93 = Class              #95           // java/lang/Double
   #94 = NameAndType        #20:#96       // valueOf:(D)Ljava/lang/Double;
   #95 = Utf8               java/lang/Double
   #96 = Utf8               (D)Ljava/lang/Double;
   #97 = Fieldref           #8.#98        // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.doubleObjectVar:Ljava/lang/Double;
   #98 = NameAndType        #99:#100      // doubleObjectVar:Ljava/lang/Double;
   #99 = Utf8               doubleObjectVar
  #100 = Utf8               Ljava/lang/Double;
  #101 = Fieldref           #8.#102       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.charVar:C
  #102 = NameAndType        #103:#104     // charVar:C
  #103 = Utf8               charVar
  #104 = Utf8               C
  #105 = Methodref          #106.#107     // java/lang/Character.valueOf:(C)Ljava/lang/Character;
  #106 = Class              #108          // java/lang/Character
  #107 = NameAndType        #20:#109      // valueOf:(C)Ljava/lang/Character;
  #108 = Utf8               java/lang/Character
  #109 = Utf8               (C)Ljava/lang/Character;
  #110 = Fieldref           #8.#111       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.charObjectVar:Ljava/lang/Character;
  #111 = NameAndType        #112:#113     // charObjectVar:Ljava/lang/Character;
  #112 = Utf8               charObjectVar
  #113 = Utf8               Ljava/lang/Character;
  #114 = Fieldref           #8.#115       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.boolVar:Z
  #115 = NameAndType        #116:#117     // boolVar:Z
  #116 = Utf8               boolVar
  #117 = Utf8               Z
  #118 = Methodref          #119.#120     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
  #119 = Class              #121          // java/lang/Boolean
  #120 = NameAndType        #20:#122      // valueOf:(Z)Ljava/lang/Boolean;
  #121 = Utf8               java/lang/Boolean
  #122 = Utf8               (Z)Ljava/lang/Boolean;
  #123 = Fieldref           #8.#124       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.boolObjectVar:Ljava/lang/Boolean;
  #124 = NameAndType        #125:#126     // boolObjectVar:Ljava/lang/Boolean;
  #125 = Utf8               boolObjectVar
  #126 = Utf8               Ljava/lang/Boolean;
  #127 = String             #128          // Hello, Java!
  #128 = Utf8               Hello, Java!
  #129 = Fieldref           #8.#130       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.stringVar:Ljava/lang/String;
  #130 = NameAndType        #131:#132     // stringVar:Ljava/lang/String;
  #131 = Utf8               stringVar
  #132 = Utf8               Ljava/lang/String;
  #133 = Fieldref           #8.#134       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.intArray:[I
  #134 = NameAndType        #135:#136     // intArray:[I
  #135 = Utf8               intArray
  #136 = Utf8               [I
  #137 = Fieldref           #8.#138       // com/boldbit/bitharvester/Harvester/Extractor/Fields/Data/FieldsData.objectVar:Ljava/lang/Object;
  #138 = NameAndType        #139:#140     // objectVar:Ljava/lang/Object;
  #139 = Utf8               objectVar
  #140 = Utf8               Ljava/lang/Object;
  #141 = Utf8               byteVar
  #142 = Utf8               ConstantValue
  #143 = Integer            123
  #144 = Utf8               Code
  #145 = Utf8               LineNumberTable
  #146 = Utf8               SourceFile
  #147 = Utf8               FieldsData.java
{
  public static final transient byte byteVar;
    descriptor: B
    flags: (0x0099) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_TRANSIENT
    ConstantValue: int 123

  protected byte byteTVar;
    descriptor: B
    flags: (0x0004) ACC_PROTECTED

  java.lang.Byte byteObjectVar;
    descriptor: Ljava/lang/Byte;
    flags: (0x0000)

  short shortVar;
    descriptor: S
    flags: (0x0000)

  java.lang.Short shortObjectVar;
    descriptor: Ljava/lang/Short;
    flags: (0x0000)

  int intVar;
    descriptor: I
    flags: (0x0000)

  java.lang.Integer integerVar;
    descriptor: Ljava/lang/Integer;
    flags: (0x0000)

  int intSecondVar;
    descriptor: I
    flags: (0x0000)

  long longVar;
    descriptor: J
    flags: (0x0000)

  java.lang.Long longObjectVar;
    descriptor: Ljava/lang/Long;
    flags: (0x0000)

  float floatVar;
    descriptor: F
    flags: (0x0000)

  java.lang.Float floatObjectVar;
    descriptor: Ljava/lang/Float;
    flags: (0x0000)

  double doubleVar;
    descriptor: D
    flags: (0x0000)

  java.lang.Double doubleObjectVar;
    descriptor: Ljava/lang/Double;
    flags: (0x0000)

  char charVar;
    descriptor: C
    flags: (0x0000)

  java.lang.Character charObjectVar;
    descriptor: Ljava/lang/Character;
    flags: (0x0000)

  boolean boolVar;
    descriptor: Z
    flags: (0x0000)

  java.lang.Boolean boolObjectVar;
    descriptor: Ljava/lang/Boolean;
    flags: (0x0000)

  java.lang.String stringVar;
    descriptor: Ljava/lang/String;
    flags: (0x0000)

  int[] intArray;
    descriptor: [I
    flags: (0x0000)

  java.lang.Object objectVar;
    descriptor: Ljava/lang/Object;
    flags: (0x0000)

  public com.boldbit.bitharvester.Harvester.Extractor.Fields.Data.FieldsData();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: bipush        111
         7: putfield      #7                  // Field byteSVar:B
        10: aload_0
        11: bipush        52
        13: putfield      #13                 // Field byteTVar:B
        16: aload_0
        17: bipush        100
        19: invokestatic  #16                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
        22: putfield      #22                 // Field byteObjectVar:Ljava/lang/Byte;
        25: aload_0
        26: sipush        1000
        29: putfield      #26                 // Field shortVar:S
        32: aload_0
        33: sipush        1000
        36: invokestatic  #30                 // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
        39: putfield      #35                 // Field shortObjectVar:Ljava/lang/Short;
        42: aload_0
        43: ldc           #39                 // int 100000
        45: putfield      #40                 // Field intVar:I
        48: aload_0
        49: ldc           #44                 // int 9876543
        51: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        54: putfield      #50                 // Field integerVar:Ljava/lang/Integer;
        57: aload_0
        58: sipush        1234
        61: putfield      #54                 // Field intSecondVar:I
        64: aload_0
        65: ldc2_w        #57                 // long 1000000000l
        68: putfield      #59                 // Field longVar:J
        71: aload_0
        72: ldc2_w        #57                 // long 1000000000l
        75: invokestatic  #63                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        78: putfield      #68                 // Field longObjectVar:Ljava/lang/Long;
        81: aload_0
        82: ldc           #72                 // float 3.14f
        84: putfield      #73                 // Field floatVar:F
        87: aload_0
        88: ldc           #72                 // float 3.14f
        90: invokestatic  #77                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        93: putfield      #82                 // Field floatObjectVar:Ljava/lang/Float;
        96: aload_0
        97: ldc2_w        #86                 // double 3.14159265359d
       100: putfield      #88                 // Field doubleVar:D
       103: aload_0
       104: ldc2_w        #86                 // double 3.14159265359d
       107: invokestatic  #92                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       110: putfield      #97                 // Field doubleObjectVar:Ljava/lang/Double;
       113: aload_0
       114: bipush        65
       116: putfield      #101                // Field charVar:C
       119: aload_0
       120: bipush        65
       122: invokestatic  #105                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
       125: putfield      #110                // Field charObjectVar:Ljava/lang/Character;
       128: aload_0
       129: iconst_1
       130: putfield      #114                // Field boolVar:Z
       133: aload_0
       134: iconst_1
       135: invokestatic  #118                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       138: putfield      #123                // Field boolObjectVar:Ljava/lang/Boolean;
       141: aload_0
       142: ldc           #127                // String Hello, Java!
       144: putfield      #129                // Field stringVar:Ljava/lang/String;
       147: aload_0
       148: iconst_5
       149: newarray       int
       151: dup
       152: iconst_0
       153: iconst_1
       154: iastore
       155: dup
       156: iconst_1
       157: iconst_2
       158: iastore
       159: dup
       160: iconst_2
       161: iconst_3
       162: iastore
       163: dup
       164: iconst_3
       165: iconst_4
       166: iastore
       167: dup
       168: iconst_4
       169: iconst_5
       170: iastore
       171: putfield      #133                // Field intArray:[I
       174: aload_0
       175: new           #2                  // class java/lang/Object
       178: dup
       179: invokespecial #1                  // Method java/lang/Object."<init>":()V
       182: putfield      #137                // Field objectVar:Ljava/lang/Object;
       185: return
      LineNumberTable:
        line 3: 0
        line 6: 4
        line 7: 10
        line 8: 16
        line 9: 25
        line 10: 32
        line 11: 42
        line 12: 48
        line 13: 57
        line 14: 64
        line 15: 71
        line 16: 81
        line 17: 87
        line 18: 96
        line 19: 103
        line 20: 113
        line 21: 119
        line 22: 128
        line 23: 133
        line 26: 141
        line 27: 147
        line 28: 174
}
SourceFile: "FieldsData.java"
